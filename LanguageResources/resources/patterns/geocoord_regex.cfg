//				NOTICE
/**
 *
 *  Copyright 2009-2013 The MITRE Corporation.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * **************************************************************************
 *                          NOTICE
 * This software was produced for the U. S. Government under Contract No.
 * W15P7T-12-C-F600, and is subject to the Rights in Noncommercial Computer
 * Software and Noncommercial Computer Software Documentation Clause
 * 252.227-7014 (JUN 1995)
 *
 * (c) 2012 The MITRE Corporation. All Rights Reserved.
 * **************************************************************************
 */
// HISTORY
// =================
// 2012-07-19  MCU  added range test case for DD-01, DM-01, DMS-01
//                  "98 degrees" test: "98 44 009 N, 292 24 03 E  FAIL",  for example.
// 2012-08-08 MCU   removed notion that LONGITUDE is [01][0-7]\d   I don't rembember where I got that.
//                  [01]?\d\d is sufficient and validation of match will be done on all matches.  So these patterns can be simplified.
//                   0\d\d
//                   \d{1,3}, etc.
// 2012-10-10 MCU   Looking at DMS patterns abmiguities.  Order matters.  Flexpat 1.1 now preserves order of appearance 
//                  in this file.  First rule to fire a match will be considered best match, others with exact span will be duplicates.
// 
// 2012-11-26 MCU   DM and DMS patterns without hemisphere patterns are now supported.
//                  Truth data included as a CSV file. See OpenSextant GeocoderEval for source and scripts.
//
// 2012-01-05 MCU   Saw reports that had invisible 'guarded area marker char' (U+0096) as separator space between lat/lon 
//                  -- So latlonSep has range of allowable space or control chars U+0080 to U+00A0. 
// 
// Pattern guidelines:   use "\" not "\\" 
// To really mean "\\" -- escape a slash use <slash>
//
//Hemispheres
#DEFINE	hemiLat	[NSns]
#DEFINE	hemiLon	[EWew]
#DEFINE	hemiLatSign	[-+]
#DEFINE	hemiLonSign	[-+]
#DEFINE hemiLatPre      [-+NSns]
#DEFINE hemiLonPre      [-+EWew]

//space and punctuation
#DEFINE slash   \\
#DEFINE degSym   [°º]

// LAT DM separator -- removed ".", as D.M is a decimal degree pattern.
// To specifically support D.M.S patterns best use a specific pattern for that one case.
// LAT SEPARATORS
#DEFINE dmLatSep   \s?DEG\s?|[-°º:]\s?|\s
#DEFINE msLatSep   [-'´’′:.\s]
//#DEFINE secLatSep  ["'\u00B4\u2019\u201D\u2033\u2032\s]{1,2}

// LON SEPARATORS -- same as LAT
#DEFINE dmLonSep   \s?DEG\s?|[-°º:]\s?|\s
#DEFINE msLonSep   [-'´’′:.\s]
//#DEFINE secLonSep   ["'\u00B4\u2019\u201D\u2033\u2032\s]{1,2}

#DEFINE secLatSep ["'´’”″′\s]{0,2}
#DEFINE secLonSep ["'´’”″′\s]{0,2}

#DEFINE latlonSepNoDash      [;,/|=x\s\u0080-\u00A0]
// Allows a "-" dash between LAT and LON, where dash is not a hemi sign
#DEFINE latlonSep     [-;,/|=x\s\u0080-\u00A0]
#DEFINE dmsSep         [-.:\s]

// SPACE: Coordinate patterns can break across lines ~ HTML, word docs, word wrapping, etc.
//  RULE: Allow no more than 3 whitespace chars in the general case; In some cases optional space may be worth testing
//#DEFINE	space	\\s{1,3}
//#DEFINE optSpace        \\s{0,3}

// Parts of a decimal degree Latitude/Longitude
#DEFINE	decDegLat	\d?\d\.\d{1,20}
#DEFINE	decDegLon	[0-1]?\d?\d\.\d{1,20}

// degree decimal minute lat/lon;  either:
// MM.m..., 
//  M.m..., 
//  M-mm is MIN-SEC, not MIN.DECMIN
// MM-mmm... 
//  M-mmm... 
//                NOT M-mm or MM-mm which implies Min/Sec, not decimal
#DEFINE	decMinLat	[0-5]?\d\.\d{1,20}
#DEFINE decMinLat3      [0-5]?\d[-.]\d{3,20}
#DEFINE	decMinLon	[0-5]?\d\.\d{1,20}
#DEFINE decMinLon3      [0-5]?\d[-.]\d{3,20}

// Difference between DMS fixed-width and variable lenght fields could be accomplished by these greedy matchers 
//  \d{1,2} or \d?, for example.
//  if 2 digits exist, then \d{1,2} will consume both, before matching next item in pattern.
//  Fear:  too many variable or optional items will lead to a lot of false positives.
//  Later if this framework proves to work we could consolidate the variable length and fixed length patterns back to a common pattern.
// For now trying to make this more accurate and explicit.

// Parts of a DMS latitude/Longitude
#DEFINE	degLat	\d{1,2}
#DEFINE	degLon	[01]?\d?\d

//Parts of a Degrees Minutes Seconds fractional seconds
#DEFINE	fractMinLat	[-\.]\d{1,6}
#DEFINE	fractMinLon	[-\.]\d{1,6}
#DEFINE	fractSecLat	\.\d{1,6}
#DEFINE	fractSecLon	\.\d{1,6}
#DEFINE	fractSecLatOpt	\.?\d{1,6}
#DEFINE	fractSecLonOpt	\.?\d{1,6}
#DEFINE	fractMinLat3	\d{3,6}
#DEFINE	fractMinLon3	\d{3,6}

// Fixed-length patterns
#DEFINE dmsDegLat  [0-8]\d
#DEFINE dmsDegLon  [01]\d\d
#DEFINE dmsMinLat  [0-5]\d
#DEFINE dmsMinLon  [0-5]\d
#DEFINE dmsSecLat  [0-5]\d
#DEFINE dmsSecLon  [0-5]\d

#DEFINE	minLat	[0-5]?\d
#DEFINE	secLat	[0-5]?\d
#DEFINE	minLon	[0-5]?\d
#DEFINE	secLon	[0-5]?\d

#DEFINE latMarker Lat\w*[:=]?
#DEFINE lonMarker Lon\w*[:=]?

// Parts of an MGRS and UTM
#DEFINE	UTMBand	        [A-HJ-NP-Z]
#DEFINE	UTMZone 	[0-5]?\d
#DEFINE	MGRSQuad	[A-HJ-NP-Z][A-HJ-NP-V]
#DEFINE MGRSZone        [0-6]?\d\s?[C-HJ-NP-X]

// http://en.wikipedia.org/wiki/Universal_Transverse_Mercator
// UTM Easting is from 167,000 to 833,000 m
//     Northing is from   0 to 10,000,000 m ( <= 9,999,999m)
#DEFINE UTMEasting \d{6}
#DEFINE UTMNorthing \d{3,7}

// MGRS precision is 1m.  Quad is 100,000m sq so resolution is 5 digits + 5 digits with optional whitespace
// 99999n 99999e  -- in MGRS we never see "m" units or N/E denoted explicitly
// Occassionally, newlines or whitespace are interspersed in offset
// minimal:
// dd
// ddddd ddddd  with an additional one or two white spaces.   The offsets start and end with numbers. Only whitespace between is optional. 
// ddddd dddddd  additional digit in Easting  -- trailing 6th digit is a typo; trim off
// dddddd ddddd  additional digit in Northing -- trailing 6th digit is a typo; trim off
// ddddddddddd   Typo introduces ambiguity -- only correct thing is to split on halfway point +/- 1 digit and emit two answers
// 
// "precise" pattern is too precise.
#DEFINE Easting_Northing_Precise    \d{2,5}\s?\d{2,5}
#DEFINE Easting_Northing    \d[\s\d]{0,10}\d

//#NORM	GEOCOORD	org.opensextant.regex.DebugNormalizer
#NORM	GEOCOORD	org.opensextant.regex.geo.GeoNormalizer

//POST	Date	org.opensextant.regex.DebugPostProcessor
#POST	GEOCOORD	org.opensextant.regex.geo.GeoPostProcessor

#TAXO	GEOCOORD	Geo.place.geocoordinate

//---------------------------RULES------------------------------------------------

#  #RULE	GEOCOORD  FAM   ENUM    PATTERN

//..........................................
//			    MGRS
//..........................................
//  FORM: ZZZQQ ee* nn*
//           Z Q E N       Zone (2-3 char), Quad (2 char), Easting (1-5 digits) Northing(1-5 digits)
//  http://en.wikipedia.org/wiki/Military_grid_reference_system
//  http://www.armystudyguide.com/content/Prep_For_Basic_Training/Prep_for_basic_land_navigation/locate-a-point-using-the-.shtml
#RULE	GEOCOORD  MGRS    01      \b<MGRSZone>\s*<MGRSQuad>\s*<Easting_Northing>\b

//..........................................
//			    UTM
//..........................................
// FORM: (?# ZZA DDDDDD DDDDDDD )
#RULE	GEOCOORD  UTM  01     \b<UTMZone>\s*<UTMBand>\s*<UTMEasting>[mE]{0,2}\s*<UTMNorthing>[mN]{0,2}\b


//..........................................
//                    Degrees Decimal minutes
//..........................................
// TODO:  Clean up all test cases below for DM and DMS
//                       
//              00    DD MMH-mmm    DDD MMH-mmm
//              01a   DD MM H       DDD MM H
//              01a   DD MM.mmm H   DDD MM.mmm H
//              01a   DD DEG MM.m H DDD DEG MM.m H
//              01b H DD MM       H DDD MM
//              01b H DD MM.mmm   H DDD MM.mmm
//
//   Variables: "x" or "BY" are equivalent separators to ";/,|(sp)"
//              Deg symbol, ', ", or '' are all optional, but if present, they suggest pattern is a coordinate, not just a pair of numbers.
//              Lon DDD is 1-3 numbers, Lat DD is 1-3 numbers, leading '0' optional

// Pattern logic for dealing with factional minutes;
//  work-in progress:
//  has separators?
//     YES => is sepator a "-" dash throughout?
//        YES => if fractMin length is 2 chars, then this is DMS, not DM.m
//        NO =>  is factMin prefixed with "-" and 
//
//

// FORM:  DDMMH-mmm
#RULE	GEOCOORD   DM      00      <dmsDegLat>[-\s]?<dmsMinLat><hemiLat><fractMinLat>\s*<latlonSep>?\s*<dmsDegLon>[-\s]?<dmsMinLon><hemiLon><fractMinLon>

// VARIABLE LENGTH FIELDS
// FORM:  DDMMmmmHDDDMMmmmH
#RULE	GEOCOORD   DM      01a     <degLat><dmLatSep><minLat><fractMinLat>?<msLatSep>?\s?<hemiLat>\s*<latlonSep>?\s*<degLon><dmLonSep><minLon><fractMinLon>?<msLonSep>?\s?<hemiLon>


// VARIABLE LENGTH FIELDS
// FORM:  DD MM.mmm H
// lat/lon separator -- cannot use "-" (latlonSep) as it is ambiguous if optional sep with optional preceding hemisphere which one is which. 
//#RULE    GEOCOORD    DM    01b    <hemiLatPre>\s?<degLat><dmLatSep><minLat><fractMinLat>?<msLatSep>?\s*<latlonSepNoDash>?\s*<hemiLonPre>\s?<degLon><dmLonSep><minLon><fractMinLon>?<msLonSep>?


// COPY OF 01a/b to allow for fixed-width min, sec, but w/out delimiters.
// FORM:  DDMM.m*H
#RULE	GEOCOORD   DM      02a     <dmsDegLat><minLat><fractMinLat>\s?<hemiLat>\s*<latlonSep>?\s*<dmsDegLon><minLon><fractMinLon>\s?<hemiLon>

// FORM:  HDDMM.m*
#RULE	GEOCOORD   DM      02b      <hemiLat>\s?<dmsDegLat><dmsMinLat><fractMinLat>\s*<latlonSep>?\s*<hemiLon>\s?<dmsDegLon><dmsMinLon><fractMinLon>

// Desc: FIXED, NO DELIM, FRACTIONAL MINUTES -- 03a/b
#RULE	GEOCOORD   DM      03a      <dmsDegLat><dmsMinLat><fractMinLat3>\s?<hemiLat>\s*<latlonSep>?\s*<dmsDegLon><dmsMinLon><fractMinLon3>\s?<hemiLon>

#RULE	GEOCOORD   DM      03b      <hemiLat>\s?<dmsDegLat><dmsMinLat><fractMinLat3>\s*<latlonSep>?\s*<hemiLon>\s?<dmsDegLon><dmsMinLon><fractMinLon3>

// Finds DM or DM.m degree patterns that have no hemisphere.
// TODO: Revisit why optional hemisphere poses a problem.  For now we assume the lat/lon separator is not a dash
// 
#RULE	GEOCOORD   DM      03-deg      \b<degLat>°\s*<minLat><fractMinLat>?<msLatSep>?\s*<latlonSepNoDash>?\s*<degLon>°\s*<minLon><fractMinLon>?<msLonSep>?\b

// desc: FIXED WIDTH FIELDS, NO SEP
#RULE	GEOCOORD   DM      04a      <hemiLat><dmsDegLat><dmsMinLat>\s*<latlonSep>?\s*<hemiLon><dmsDegLon><dmsMinLon>

// FORM:  DDMMH DDMMH 
#RULE	GEOCOORD   DM      04b      <dmsDegLat><dmsMinLat>\s*<hemiLat>\s*<latlonSep>?\s*<dmsDegLon><dmsMinLon>\s*<hemiLon>

// RANDOM PATTERNS:
// FORM: /DDMMHd/DDDMMHd/ where d=checksum value
#RULE	GEOCOORD   DM      05      /<dmsDegLat><dmsMinLat><hemiLat>\d/<dmsDegLon><dmsMinLon><hemiLon>\d/


// DM with minimal symbols.  Required LAT/LON separator.  Otherwise this is a list of numbers with +/- signs.
// FORM: +/-DD MM.mmm x +/-DDD DD.DDD
#RULE	GEOCOORD   DM      06      <hemiLatSign><degLat>\s<decMinLat>\s*[x/,]\s*<hemiLonSign><degLon>\s<decMinLon>

// DOT patterns -- We're for now assuming 
//
//     DD.MM.SS  DDD.MM.SS  is DMS
//     DD.MM.mmm* DDD.MM.mmm* is DM
//
//   and Longitude in these patterns is 3-digits
// 
#RULE	GEOCOORD   DM      01a-dot  <dmsDegLat>\.<dmsMinLat>\.<fractMinLat3>\s?<hemiLat>\s*<latlonSep>?\s*<dmsDegLon>\.<dmsMinLon>\.<fractMinLon3>\s?<hemiLon>
#RULE	GEOCOORD   DM      01b-dot  <hemiLat>\s?<dmsDegLat>\.<dmsMinLat>\.<fractMinLat3>\s*<latlonSep>?\s*<hemiLon>\s?<dmsDegLon>\.<dmsMinLon>\.<fractMinLon3>



//..........................................
//                    Degrees Minutes Seconds
//..........................................
//                   DD MM SS H    DDD MM SS H
//                 H DD MM SS    H DDD MM SS 
#RULE	GEOCOORD   DMS     01a  <latMarker>?\s*<degLat><dmLatSep><minLat><msLatSep>\s?<secLat><fractSecLat>?<secLatSep>\s?<hemiLat>\s?<latlonSep>\s?<lonMarker>?\s*<degLon><dmLonSep><minLon><msLonSep>\s?<secLon><fractSecLon>?<secLonSep>\s?<hemiLon>


// DMS 01 with hemisphere leading
#RULE	GEOCOORD   DMS     01b  <hemiLatPre>\s?<degLat><dmLatSep><minLat><msLatSep>\s?<secLat><fractSecLat>?<secLatSep>\s?<latlonSepNoDash>\s?<hemiLonPre>\s?<degLon><dmLonSep><minLon><msLonSep>\s?<secLon><fractSecLon>?<secLonSep>

// DMS01 with fractional seconds, but no hemisphere symbol, just degree
#RULE	GEOCOORD   DMS     01-deg  \b<degLat>°\s?<minLat><msLatSep>\s?<secLat><fractSecLat>?<secLatSep>\s?<latlonSepNoDash>\s?<degLon>°\s?<minLon><msLonSep>\s?<secLon><fractSecLon>?<secLonSep>
#RULE	GEOCOORD   DMS      01a-dot  <dmsDegLat>\.<dmsMinLat>\.<dmsSecLat>\s?<hemiLat>\s*<latlonSep>?\s*<dmsDegLon>\.<dmsMinLon>\.<dmsSecLon>\s?<hemiLon>
#RULE	GEOCOORD   DMS      01b-dot  <hemiLat>\s?<dmsDegLat>\.<dmsMinLat>\.<dmsSecLat>\s*<latlonSep>?\s*<hemiLon>\s?<dmsDegLon>\.<dmsMinLon>\.<dmsSecLon>

// DMS 01 with dot as a separator.
// 
#RULE	GEOCOORD   DMS     02a  <degLat>\.<minLat>\.<secLat><secLatSep>\s?<hemiLat>\s?<latlonSep>\s?<degLon>\.<minLon>\.<secLon><secLonSep>\s?<hemiLon>

#RULE	GEOCOORD   DMS     02b  <hemiLat><degLat>\.<minLat>\.<secLat><secLatSep>\s?<latlonSep>\s?<hemiLon><degLon>\.<minLon>\.<secLon>

// DMS with NO SEPARATORS
#RULE	GEOCOORD   DMS     03a  <dmsDegLat><dmsMinLat><dmsSecLat>\s?<hemiLat>\s?<latlonSep>?\s?<dmsDegLon><dmsMinLon><dmsSecLon>\s?<hemiLon>

#RULE	GEOCOORD   DMS     03b  <hemiLatPre><dmsDegLat><dmsMinLat><dmsSecLat>\s?<latlonSep>?\s?<hemiLonPre><dmsDegLon><dmsMinLon><dmsSecLon>

// DMS NO SEPARATORS, decimal seconds. Ambiguous -- is additional precision in Fractional Minutes or fractional seconds?
#RULE	GEOCOORD   DMS     04a  <dmsDegLat><dmsMinLat><dmsSecLat><fractSecLatOpt><hemiLat>\s?<latlonSep>?\s?<dmsDegLon><dmsMinLon><dmsSecLon><fractSecLonOpt><hemiLon>
#RULE	GEOCOORD   DMS     04b  <hemiLat><dmsDegLat><dmsMinLat><dmsSecLat><fractSecLatOpt>\s?<latlonSep>?\s?<hemiLon><dmsDegLon><dmsMinLon><dmsSecLon><fractSecLonOpt>


//..........................................
//                      Decimal Degrees
//..........................................
// FORM: DD-xx, Decimal Deg, Preceding Hemisphere (a) H DD.DDDDDDÂ° HDDD.DDDDDDÂ°, optional deg symbol
#RULE	GEOCOORD   DD      01      <hemiLatPre>\s?<decDegLat><degSym>?\s*<latlonSepNoDash>?\s*<hemiLonPre>\s?<decDegLon><degSym>?

// FORM: DD-xx, Decimal Deg, Postpending Hemisphere (a) DD.DDDDDDÂ°H DDD.DDDDDDÂ°H,   optional deg symbol
#RULE	GEOCOORD   DD      02      <decDegLat><degSym>?<hemiLat>\s*<latlonSep>?\s*<decDegLon><degSym>?<hemiLon>

// FORM: DD-xx, Decimal Deg, Preceding Hemisphere, +/- with deg symbol, (a) {-|+|}DD.DDDDDD° {-|+|}DDD.DDDDDD°
#RULE	GEOCOORD   DD      03      <hemiLatSign>?<decDegLat><degSym>\s*<latlonSepNoDash>?\s*<hemiLonSign>?<decDegLon><degSym>

// FORM: DD-xx, Decimal Deg with explicit LAT: LON: markers, both hemisphere and degree symbols are optional
#RULE	GEOCOORD	DD	04	<latMarker>\s*<hemiLatPre>?<decDegLat><degSym>?<hemiLat>?\s*<latlonSep>\s*<lonMarker>\s*<hemiLonPre>?<decDegLon><degSym>?<hemiLon>?

// #RULE	GEOCOORD	DD	04a	\w+[:=]\s*<hemiLatPre>?<decDegLat>\s*<latlonSep>\s*<hemiLonPre>?<decDegLon>

//..........................................
//                      Degrees -- These patterns are so low-resolution, that for now it seems useless to allow these to run by default.
//                      Its approximately 100 KM x 100 KM
//..........................................

// FORM: DD-xx, Decimal Deg, Preceding Hemisphere (a) HDD° HDDD°, required deg symbol
#RULE	GEOCOORD   DD      05      <hemiLatPre>?\s?<degLat><degSym>\s*<latlonSepNoDash>?\s*<hemiLonPre>?\s?<degLon><degSym>
#RULE	GEOCOORD   DD      06      <degLat><degSym>?\s?<hemiLat>\s*<latlonSep>?\s*<degLon><degSym>?\s?<hemiLon>
#RULE	GEOCOORD   DD      07      <hemiLat>\s?<degLat>\s*<latlonSep>?\s*<hemiLon>\s?<degLon>
// a bare decimal degree pair with optional signs for hemisphere, very noisy, use with caution
//#RULE	GEOCOORD   DD      08      <hemiLatSign>?<decDegLat>\s*<latlonSep>?\s*<hemiLonSign>?\s?<decDegLon>
